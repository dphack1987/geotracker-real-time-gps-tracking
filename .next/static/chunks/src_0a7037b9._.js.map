{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/services/geo-service.ts"],"sourcesContent":["export interface GeolocationData {\n  latitude: number\n  longitude: number\n  accuracy: number\n  altitude: number | null\n  speed: number | null\n  heading: number | null\n  timestamp: number\n}\n\nexport interface GeolocationOptions {\n  enableHighAccuracy?: boolean\n  timeout?: number\n  maximumAge?: number\n  watchPosition?: boolean\n}\n\nexport interface LocationError {\n  code: number\n  message: string\n  type: 'permission' | 'position' | 'timeout' | 'unsupported' | 'unknown'\n}\n\nexport interface DeviceInfo {\n  userAgent: string\n  platform: string\n  language: string\n  screenResolution: string\n  timezone: string\n  fingerprint: string\n}\n\nexport interface IPInfo {\n  ip: string\n  country?: string\n  city?: string\n  latitude?: number\n  longitude?: number\n}\n\nexport class GeoService {\n  private static watchId: number | null = null\n\n  static async getCurrentPosition(options: GeolocationOptions = {}): Promise<GeolocationData> {\n    if (!navigator.geolocation) {\n      throw this.createError({\n        code: 0,\n        message: \"Geolocalización no soportada en este navegador\",\n        type: 'unsupported'\n      })\n    }\n\n    // Forzar máxima precisión\n    const defaultOptions: PositionOptions = {\n      enableHighAccuracy: true,  // Usar GPS en lugar de WiFi/Cell\n      timeout: 30000,           // Esperar más tiempo para mejor precisión\n      maximumAge: 0,           // Siempre obtener posición nueva\n      ...options\n    }\n\n    try {\n      // Intentar obtener ubicación por GPS primero\n      const position = await new Promise<GeolocationPosition>((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, defaultOptions)\n      })\n\n      // Obtener datos adicionales de precisión\n      const locationData = this.formatPosition(position)\n\n      // Retornar solo la ubicación real con máxima precisión\n      return locationData\n    } catch (error: any) {\n      throw this.handleGeolocationError(error)\n    }\n  }\n\n  static watchPosition(\n    onSuccess: (position: GeolocationData) => void,\n    onError: (error: LocationError) => void,\n    options: GeolocationOptions = {}\n  ): () => void {\n    if (!navigator.geolocation) {\n      onError(this.createError({\n        code: 0,\n        message: \"Geolocalización no soportada\",\n        type: 'unsupported'\n      }))\n      return () => {}\n    }\n\n    const defaultOptions: PositionOptions = {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0,\n      ...options\n    }\n\n    this.watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        try {\n          const formattedPosition = this.formatPosition(position)\n          onSuccess(formattedPosition)\n        } catch (error: any) {\n          onError(this.handleGeolocationError(error))\n        }\n      },\n      (error) => {\n        onError(this.handleGeolocationError(error))\n      },\n      defaultOptions\n    )\n\n    return () => {\n      if (this.watchId !== null) {\n        navigator.geolocation.clearWatch(this.watchId)\n        this.watchId = null\n      }\n    }\n  }\n\n  static getDeviceInfo(): DeviceInfo {\n    return {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      language: navigator.language,\n      screenResolution: `${window.screen.width}x${window.screen.height}`,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      fingerprint: this.generateFingerprint()\n    }\n  }\n\n  static async getIPInfo(): Promise<IPInfo> {\n    try {\n      const response = await fetch('https://ipapi.co/json/')\n      if (!response.ok) throw new Error('Error al obtener información IP')\n      \n      const data = await response.json()\n      return {\n        ip: data.ip,\n        country: data.country_name,\n        city: data.city,\n        latitude: data.latitude,\n        longitude: data.longitude\n      }\n    } catch (error) {\n      console.error('Error obteniendo información IP:', error)\n      return { ip: 'desconocida' }\n    }\n  }\n\n  static async getLocationDetails(latitude: number, longitude: number): Promise<{\n    country: string\n    city: string\n    address: string\n  }> {\n    try {\n      const response = await fetch(\n        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&zoom=18&addressdetails=1`\n      )\n      \n      if (!response.ok) {\n        throw new Error('Error al obtener detalles de ubicación')\n      }\n\n      const data = await response.json()\n      \n      return {\n        country: data.address.country || 'Desconocido',\n        city: data.address.city || data.address.town || data.address.village || 'Desconocido',\n        address: data.display_name || 'Dirección no disponible'\n      }\n    } catch (error) {\n      console.error('Error obteniendo detalles de ubicación:', error)\n      return {\n        country: 'Desconocido',\n        city: 'Desconocido',\n        address: 'Dirección no disponible'\n      }\n    }\n  }\n\n  private static formatPosition(position: GeolocationPosition): GeolocationData {\n    return {\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      accuracy: position.coords.accuracy,\n      altitude: position.coords.altitude,\n      speed: position.coords.speed,\n      heading: position.coords.heading,\n      timestamp: position.timestamp\n    }\n  }\n\n  private static handleGeolocationError(error: GeolocationPositionError): LocationError {\n    let type: LocationError['type'] = 'unknown'\n    let message = 'Error desconocido al obtener ubicación'\n\n    switch (error.code) {\n      case 1:\n        type = 'permission'\n        message = 'Acceso a la ubicación denegado. Por favor, permite el acceso a tu ubicación en la configuración del navegador.'\n        break\n      case 2:\n        type = 'position'\n        message = 'No se pudo determinar tu ubicación. Verifica tu conexión GPS y a internet.'\n        break\n      case 3:\n        type = 'timeout'\n        message = 'Tiempo de espera agotado al intentar obtener la ubicación.'\n        break\n    }\n\n    return this.createError({ code: error.code, message, type })\n  }\n\n  private static createError({ code, message, type }: {\n    code: number\n    message: string\n    type: LocationError['type']\n  }): LocationError {\n    return { code, message, type }\n  }\n\n  private static generateFingerprint(): string {\n    const components = [\n      navigator.userAgent,\n      navigator.language,\n      new Date().getTimezoneOffset(),\n      navigator.hardwareConcurrency || 'unknown',\n      window.screen.colorDepth,\n      window.screen.pixelDepth,\n      window.screen.width,\n      window.screen.height,\n      navigator.vendor,\n      navigator.platform,\n      \"canvas:\" + this.getCanvasFingerprint()\n    ]\n\n    return components.join('|')\n  }\n\n  private static getCanvasFingerprint(): string {\n    try {\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      if (!ctx) return 'no-canvas'\n\n      canvas.width = 200\n      canvas.height = 50\n      \n      ctx.textBaseline = 'top'\n      ctx.font = '14px Arial'\n      ctx.fillStyle = '#f60'\n      ctx.fillRect(125, 1, 62, 20)\n      \n      ctx.fillStyle = '#069'\n      ctx.fillText('GeoTracker:2024', 2, 15)\n      ctx.fillStyle = 'rgba(102, 204, 0, 0.7)'\n      ctx.fillText('Location:Verified', 4, 17)\n\n      return canvas.toDataURL()\n    } catch (e) {\n      return 'canvas-error'\n    }\n  }\n\n  static getAccuracyDescription(accuracy: number): string {\n    if (accuracy <= 10) return \"Excelente (GPS)\"\n    if (accuracy <= 30) return \"Buena\"\n    if (accuracy <= 100) return \"Moderada\"\n    if (accuracy <= 500) return \"Baja\"\n    return \"Muy baja\"\n  }\n\n  static getAccuracyColor(accuracy: number): string {\n    if (accuracy <= 10) return \"text-green-500\"\n    if (accuracy <= 30) return \"text-blue-500\"\n    if (accuracy <= 100) return \"text-yellow-500\"\n    if (accuracy <= 500) return \"text-orange-500\"\n    return \"text-red-500\"\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/services/tracking-service.ts"],"sourcesContent":["import { GeoService, type GeolocationData } from \"./geo-service\"\n\ndeclare global {\n  interface Navigator {\n    deviceMemory?: number;\n    connection?: {\n      type?: string;\n      effectiveType?: string;\n    };\n    getBattery?: () => Promise<{\n      level: number;\n    }>;\n  }\n}\n\ninterface DeviceInfo {\n  userAgent: string\n  platform: string\n  screenResolution: string\n  ipAddress: string\n  ipCountry: string | null\n  ipCity: string | null\n  browserInfo: string\n  deviceFingerprint: string\n  networkType: string\n  batteryLevel?: number\n  deviceMemory?: number\n  hardwareConcurrency: number\n  language: string\n  timezone: string\n  vendor: string\n}\n\nexport interface TrackingLink {\n  id: string\n  shortCode: string\n  templateType: string\n  isActive: boolean\n  clicks: number\n  captures: number\n  createdAt: string\n  expiresAt: string\n}\n\nexport interface LocationCapture {\n  id: string\n  linkId: string\n  latitude: number\n  longitude: number\n  accuracy: number\n  altitude: number | null\n  speed: number | null\n  heading: number | null\n  city: string | null\n  country: string | null\n  address: string | null\n  capturedAt: string\n  deviceInfo: DeviceInfo\n}\n\ninterface IPInfo {\n  ip: string\n  country: string | null\n  city: string | null\n  latitude?: number\n  longitude?: number\n}\n\nexport class TrackingService {\n  private static readonly STORAGE_KEY = 'tracking_data'\n  private static readonly API_BASE = \"/api\"\n  private static readonly MAX_RETRIES = 3\n  private static readonly RETRY_DELAY = 1000 // 1 second\n\n  private static async getIPInfo(): Promise<IPInfo> {\n    try {\n      const services = [\n        {\n          url: 'https://ipapi.co/json/',\n          transform: (data: any): IPInfo => ({\n            ip: data.ip,\n            country: data.country_name,\n            city: data.city,\n            latitude: data.latitude,\n            longitude: data.longitude\n          })\n        },\n        {\n          url: 'https://ipinfo.io/json',\n          transform: (data: any): IPInfo => ({\n            ip: data.ip,\n            country: data.country,\n            city: data.city,\n            latitude: data.loc ? parseFloat(data.loc.split(',')[0]) : undefined,\n            longitude: data.loc ? parseFloat(data.loc.split(',')[1]) : undefined\n          })\n        }\n      ]\n\n      for (const service of services) {\n        for (let attempt = 0; attempt < this.MAX_RETRIES; attempt++) {\n          try {\n            const response = await fetch(service.url)\n            if (response.ok) {\n              const data = await response.json()\n              return service.transform(data)\n            }\n          } catch (e) {\n            if (attempt === this.MAX_RETRIES - 1) continue\n            await new Promise(resolve => setTimeout(resolve, this.RETRY_DELAY * (attempt + 1)))\n          }\n        }\n      }\n\n      return {\n        ip: await this.getFallbackIP(),\n        country: null,\n        city: null\n      }\n    } catch (error) {\n      console.error('Error getting IP information:', error)\n      return {\n        ip: await this.getFallbackIP(),\n        country: null,\n        city: null\n      }\n    }\n  }\n\n  private static async getFallbackIP(): Promise<string> {\n    try {\n      const response = await fetch('https://api64.ipify.org?format=json')\n      const data = await response.json()\n      return data.ip\n    } catch {\n      return 'unknown'\n    }\n  }\n\n  private static async getDeviceInfo(): Promise<DeviceInfo> {\n    const baseInfo: DeviceInfo = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      screenResolution: `${window.screen.width}x${window.screen.height}`,\n      ipAddress: \"0.0.0.0\",\n      ipCountry: null,\n      ipCity: null,\n      browserInfo: this.getBrowserInfo(),\n      deviceFingerprint: await this.generateDeviceFingerprint(),\n      networkType: \"unknown\",\n      hardwareConcurrency: navigator.hardwareConcurrency,\n      language: navigator.language,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      vendor: navigator.vendor\n    }\n\n    try {\n      const connection = (navigator as any).connection\n      if (connection) {\n        baseInfo.networkType = connection.type || \"unknown\"\n      }\n\n      const battery = await (navigator as any).getBattery?.()\n      if (battery) {\n        baseInfo.batteryLevel = Math.round(battery.level * 100)\n      }\n\n      if ((navigator as any).deviceMemory) {\n        baseInfo.deviceMemory = (navigator as any).deviceMemory\n      }\n    } catch (e) {\n      console.warn(\"Some device APIs not available:\", e)\n    }\n\n    return baseInfo\n  }\n\n  private static getBrowserInfo(): string {\n    const ua = navigator.userAgent\n    const browserRegex = /(chrome|safari|firefox|edge|opera|ie)\\/([\\d.]+)/i\n    const match = ua.match(browserRegex)\n    return match \n      ? `${match[1].charAt(0).toUpperCase() + match[1].slice(1)} ${match[2]}`\n      : \"Unknown Browser\"\n  }\n\n  private static async generateDeviceFingerprint(): Promise<string> {\n    const components = [\n      navigator.userAgent,\n      navigator.language,\n      new Date().getTimezoneOffset(),\n      screen.width,\n      screen.height,\n      screen.colorDepth,\n      navigator.hardwareConcurrency,\n      navigator.platform,\n      (navigator as any).deviceMemory,\n      (navigator as any).connection?.type\n    ]\n    \n    const fingerprint = components.join('|')\n    const encoder = new TextEncoder()\n    const data = encoder.encode(fingerprint)\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data)\n    const hashArray = Array.from(new Uint8Array(hashBuffer))\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('')\n  }\n\n  private static async getStoredData(): Promise<{\n    links: TrackingLink[]\n    captures: LocationCapture[]\n  }> {\n    try {\n      const data = localStorage.getItem(this.STORAGE_KEY)\n      if (data) {\n        return JSON.parse(data)\n      }\n    } catch (error) {\n      console.error(\"Error reading stored data:\", error)\n    }\n    return { links: [], captures: [] }\n  }\n\n  private static async saveData(data: { links: TrackingLink[], captures: LocationCapture[] }): Promise<void> {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(data))\n    } catch (error) {\n      console.error(\"Error saving data:\", error)\n    }\n  }\n\n  static async createTrackingLink(templateType: string): Promise<TrackingLink> {\n    try {\n      const response = await fetch(`${this.API_BASE}/tracking-links`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ templateType })\n      })\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create tracking link: Server returned an error\")\n      }\n\n      const newLink = await response.json()\n      const data = await this.getStoredData()\n      data.links.push(newLink)\n      await this.saveData(data)\n\n      return newLink\n    } catch (error) {\n      console.error(\"Error creating tracking link:\", error)\n      throw error\n    }\n  }\n\n  static async getTrackingLinks(): Promise<TrackingLink[]> {\n    try {\n      const data = await this.getStoredData()\n      return data.links\n    } catch (error) {\n      console.error(\"Error fetching tracking links:\", error)\n      throw error\n    }\n  }\n\n  static async getLocationCaptures(): Promise<LocationCapture[]> {\n    try {\n      const data = await this.getStoredData()\n      return data.captures\n    } catch (error) {\n      console.error(\"Error fetching location captures:\", error)\n      throw error\n    }\n  }\n\n  static async captureLocation(linkId: string, shortCode: string): Promise<LocationCapture> {\n    try {\n      // Try to get high-precision GPS location\n      const position = await GeoService.getCurrentPosition({\n        enableHighAccuracy: true,\n        timeout: 30000,\n        maximumAge: 0\n      })\n\n      // Get device information and location details\n      const [deviceInfo, locationDetails, ipInfo] = await Promise.all([\n        this.getDeviceInfo(),\n        GeoService.getLocationDetails(position.latitude, position.longitude),\n        this.getIPInfo()\n      ])\n\n      // Create capture with all available data\n      const capture: LocationCapture = {\n        id: `capture-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        linkId,\n        latitude: position.latitude,\n        longitude: position.longitude,\n        accuracy: position.accuracy,\n        altitude: position.altitude,\n        speed: position.speed,\n        heading: position.heading,\n        city: locationDetails.city || null,\n        country: locationDetails.country || null,\n        address: locationDetails.address || null,\n        capturedAt: new Date().toISOString(),\n        deviceInfo: {\n          ...deviceInfo,\n          ipAddress: ipInfo.ip,\n          ipCountry: ipInfo.country,\n          ipCity: ipInfo.city\n        }\n      }\n\n      // Send data to server\n      const response = await fetch(`${this.API_BASE}/tracking-captures`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(capture)\n      })\n\n      if (!response.ok) {\n        throw new Error('Failed to save capture data')\n      }\n\n      // Save to local storage\n      const data = await this.getStoredData()\n      data.captures.push(capture)\n      \n      // Update tracking link statistics\n      const linkIndex = data.links.findIndex(l => l.id === linkId)\n      if (linkIndex !== -1) {\n        data.links[linkIndex].captures++\n      }\n      \n      await this.saveData(data)\n      return capture\n    } catch (error) {\n      console.error(\"Error capturing location:\", error)\n      throw error\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/share/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { LocationCapture, TrackingService } from \"@/lib/services/tracking-service\"\nimport dynamic from \"next/dynamic\"\n\n// Importar el mapa dinámicamente para evitar problemas de SSR\nconst LiveLocationMap = dynamic(\n  () => import(\"@/components/map/live-location-map\").then(mod => mod.LiveLocationMap),\n  { \n    ssr: false,\n    loading: () => (\n      <div className=\"h-[400px] flex items-center justify-center bg-gray-900 rounded-lg\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-2 border-current\" />\n      </div>\n    )\n  }\n)\n\nexport default function SharePage({\n  params\n}: {\n  params: { id: string }\n}) {\n  const [capture, setCapture] = useState<LocationCapture | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    async function loadCapture() {\n      try {\n        const captures = await TrackingService.getLocationCaptures()\n        const found = captures.find(c => c.id === params.id)\n        if (found) {\n          setCapture(found)\n        } else {\n          setError(\"Ubicación no encontrada\")\n        }\n      } catch (err) {\n        setError(\"Error al cargar la ubicación\")\n      }\n    }\n    loadCapture()\n  }, [params.id])\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Card className=\"bg-black/40 backdrop-blur-sm border-gray-800\">\n          <CardContent className=\"p-6\">\n            <div className=\"text-center text-red-400\">{error}</div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  if (!capture) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Card className=\"bg-black/40 backdrop-blur-sm border-gray-800\">\n          <CardContent className=\"p-6\">\n            <div className=\"text-center\">Cargando ubicación...</div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <Card className=\"bg-black/40 backdrop-blur-sm border-gray-800\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <span>📍</span>\n            <span>Ubicación Compartida</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Mapa */}\n          <div className=\"h-[400px] rounded-lg overflow-hidden\">\n            <LiveLocationMap\n              height=\"400px\"\n              showAccuracyCircle={true}\n              initialLocation={{\n                latitude: capture.latitude,\n                longitude: capture.longitude,\n                accuracy: capture.accuracy\n              }}\n            />\n          </div>\n\n          {/* Detalles de la Ubicación */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">\n                  Ubicación\n                </div>\n                <div className=\"text-lg\">\n                  {capture.city}, {capture.country}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <div className=\"text-sm font-medium text-muted-foreground\">\n                    Latitud\n                  </div>\n                  <div className=\"text-lg\">\n                    {capture.latitude.toFixed(6)}°\n                  </div>\n                </div>\n                <div>\n                  <div className=\"text-sm font-medium text-muted-foreground\">\n                    Longitud\n                  </div>\n                  <div className=\"text-lg\">\n                    {capture.longitude.toFixed(6)}°\n                  </div>\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">\n                  Precisión\n                </div>\n                <div className=\"text-lg\">\n                  {capture.accuracy.toFixed(1)}m\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">\n                  Capturado\n                </div>\n                <div className=\"text-lg\">\n                  {new Date(capture.capturedAt).toLocaleString()}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">\n                  Dispositivo\n                </div>\n                <div className=\"text-lg\">\n                  {capture.deviceInfo.browserInfo}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  IP: {capture.deviceInfo.ipAddress}\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}